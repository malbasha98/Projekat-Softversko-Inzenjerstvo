// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Kucni_poslovi.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Projekti-master\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Projekti-master\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Projekti-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Projekti-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Projekti-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Projekti-master\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Projekti-master\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Projekti-master\_Imports.razor"
using Kucni_poslovi;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Projekti-master\_Imports.razor"
using Kucni_poslovi.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Projekti-master\_Imports.razor"
using Kucni_poslovi.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Projekti-master\_Imports.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Projekti-master\_Imports.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\Projekti-master\_Imports.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\Projekti-master\_Imports.razor"
using Syncfusion.Blazor.Popups;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\Projekti-master\_Imports.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Projekti-master\Pages\NoviOglas.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Projekti-master\Pages\NoviOglas.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Projekti-master\Pages\NoviOglas.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Projekti-master\Pages\NoviOglas.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Projekti-master\Pages\NoviOglas.razor"
using Syncfusion.Blazor.SplitButtons;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/NoviOglas")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/NoviOglas/{idZaIzmenu}")]
    public partial class NoviOglas : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 159 "D:\Projekti-master\Pages\NoviOglas.razor"
 
    [Parameter]
    public string idZaIzmenu { get; set; }

    private bool daLiSeAzurira { get; set; }
    private string[] slikeOglasa;
    private int tipUsluge = 0;
    private bool spreciSubmit = false;

    public bool Ucitan { get; set; } = false;

    Oglas novi = new Oglas()
    {
        DatumVazenja = DateTime.Now.AddDays(30)
    };
    private List<Polje> lista;
    private bool listaUcitana = false;
    private bool Visibility { get; set; }
    private string stil = "";
    SfProgressButton ProgressBtn;
    private TipUsluge RandomObjekat { get; set; }

    public class Polje
    {
        public TipUsluge TipUsluge { get; set; }
        public string Tekst { get; set; }

        public Polje() { }

        public Polje(TipUsluge usluga)
        {
            TipUsluge = usluga;
            string[] split = Regex.Split(usluga.ToString(), @"(?<!^)(?=[A-Z])");
            string ceo = "";
            foreach (var rec in split)
            {
                ceo += rec + " ";
            }
            Tekst = ceo;
        }
    }

    public void Progressing(Syncfusion.Blazor.SplitButtons.ProgressEventArgs args)
    {
        if (args.Percent == 60)
        {
            ProgressBtn.Stop();
        }
    }

    protected async override Task OnInitializedAsync()
    {
        Ucitan = false;
        Guid prosledjenId;
        if (idZaIzmenu == null)
        {
            daLiSeAzurira = false;
        }
        else
        {
            daLiSeAzurira = true;
            slikeOglasa = new string[0];
        }
        if (daLiSeAzurira && Guid.TryParse(idZaIzmenu, out prosledjenId))
        {
            novi = await dbContext.nadjiOglas(prosledjenId);
            if (novi.PutanjeDoSlika != null)
                slikeOglasa = novi.PutanjeDoSlika.Split('?');

        }

        this.lista = new List<Polje>();
        foreach (var tipUsluge in (TipUsluge[])Enum.GetValues(typeof(TipUsluge)))
        {
            Polje novoPolje = new Polje(tipUsluge);
            lista.Add(novoPolje);
        }
        listaUcitana = true;
        if (daLiSeAzurira)
        {
            switch (novi.TipUsluge)
            {
                case TipUsluge.Dadilje:
                    tipUsluge = 0;
                    break;
                case TipUsluge.Negovatelji:
                    tipUsluge = 1;
                    break;
                case TipUsluge.KućniPomoćnici:
                    tipUsluge = 2;
                    break;
                case TipUsluge.ČuvariKućnihLjubimaca:
                    tipUsluge = 3;
                    break;
                case TipUsluge.Baštovani:
                    tipUsluge = 4;
                    break;
                default:
                    break;
            }
        }
    }

    private void OnChangeList(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        var itemData = JsonConvert.DeserializeObject<Polje>(args.ItemData != null ? args.ItemData.ToString() : "");
        novi.TipUsluge = itemData.TipUsluge;


    }

    private async Task PostaviOglas()
    {
        if (spreciSubmit)
            return;
        if (novi.TipUsluge == 0)
            novi.TipUsluge = TipUsluge.Dadilje;
        List<PruzalacUsluge> potencijalniPruzaoci = dbContext.PruzaociUsluga.Where(x => (x.TipUsluga & novi.TipUsluge) == novi.TipUsluge).ToList();
        if (daLiSeAzurira)
        {

            dbContext.Oglasi.Update(novi);
            foreach (var ev in novi.Evidencije)
            {
                if ((ev.PruzalacUsluge.TipUsluga & novi.TipUsluge) != novi.TipUsluge)
                {
                    dbContext.Remove(ev);
                }
            }
            foreach (var p in potencijalniPruzaoci)
            {
                if (novi.Evidencije.Find(x => x.PruzalacUsluge.Id == p.Id) != null)
                    continue;
                EvidencijaOglasa novaEvidencija = new EvidencijaOglasa()
                {
                    Oglas = novi,
                    Prijavljen = false,
                    PruzalacUsluge = p
                };
                novi.Evidencije.Add(novaEvidencija);

                dbContext.EvidencijeOglasa.Add(novaEvidencija);
            }
            foreach (var zahtev in novi.Zahtevi)
            {
                dbContext.Remove(zahtev);
            }
        }
        else
        {
            novi.Stanje = Stanje.Aktivan;
            var state = await authenticationStateProvider.GetAuthenticationStateAsync();
            KorisnikUsluge korisnikIzBaze = await dbContext.VratiKorisnika(state.User.Identity.Name);
            novi.KorisnikUsluge = korisnikIzBaze;
            dbContext.Oglasi.Add(novi);


            foreach (var p in potencijalniPruzaoci)
            {
                EvidencijaOglasa novaEvidencija = new EvidencijaOglasa()
                {
                    Oglas = novi,
                    Prijavljen = false,
                    PruzalacUsluge = p
                };
                novi.Evidencije.Add(novaEvidencija);

                dbContext.EvidencijeOglasa.Add(novaEvidencija);
            }
        }

        ProgressBtn.Start();
        await dbContext.SaveChangesAsync();
        await ProgressBtn.ProgressComplete();

        this.Visibility = true;
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender && daLiSeAzurira)
        {
            Ucitan = true;
            StateHasChanged();
        }
        else if (!daLiSeAzurira)
        {
            Ucitan = true;
            StateHasChanged();
        }

    }

    private void DlgButtonClick()
    {
        this.Visibility = false;

        navMenager.NavigateTo("Oglas/" + novi.Id); //Redirect na stranicu Oglas
    }

    private void OnChange(UploadChangeEventArgs args)
    {
        foreach (var file in args.Files)
        {
            var path = "SlikeOglasa/" + Guid.NewGuid().ToString() + file.FileInfo.Name;
            var celaPutanja = @"wwwroot/" + path;
            FileStream filestream = new FileStream(celaPutanja, FileMode.Create, FileAccess.Write);
            file.Stream.WriteTo(filestream);
            filestream.Close();
            file.Stream.Close();
            novi.PutanjeDoSlika += path + "?";
            if (daLiSeAzurira)
                slikeOglasa.Append(path);
        }
        var oglas = dbContext.Oglasi.Find(novi.Id);
        if (oglas != null)
        {
            dbContext.Update(novi);
        }
    }

    private void onRemove(RemovingEventArgs args)
    {
        String[] slike = novi.PutanjeDoSlika.Split('?');
        foreach (var removeFile in args.FilesData)
        {
            foreach (var s in slike)
            {
                if (s.EndsWith(removeFile.Name))
                {
                    File.Delete(@"wwwroot/"+ s);
                    int index = novi.PutanjeDoSlika.IndexOf(s);
                    novi.PutanjeDoSlika = novi.PutanjeDoSlika.Remove(index, s.Length + 1);
                }

            }
        }
    }

    private void ObrisiSliku(string putanja)
    {
        slikeOglasa = slikeOglasa.Where(x => x != putanja).ToArray();
        novi.PutanjeDoSlika = novi.PutanjeDoSlika.Remove(novi.PutanjeDoSlika.IndexOf(putanja), putanja.Length + 1);
        spreciSubmit = true;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navMenager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private MySqlCRUD dbContext { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManager<IdentityUser> userManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider authenticationStateProvider { get; set; }
    }
}
#pragma warning restore 1591
